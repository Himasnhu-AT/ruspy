name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-musl' || 'aarch64-apple-darwin' }}

      - name: Install cross (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cross
      
      - name: Make build script executable
        run: chmod +x build.sh
      
      - name: Build
        run: ./build.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/ruspy-linux.tar.gz
          asset_name: ruspy-linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/ruspy-windows.zip
          asset_name: ruspy-windows.zip
          asset_content_type: application/zip